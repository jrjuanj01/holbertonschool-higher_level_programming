The "matrix_divided" doctest
============================

Tests the matrix_divided function from 2-matrix_divided
for any edge cases that may break the functionality
of the imported function.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> try:
...     matrix_divided([["A", "d" ,"i"], ["i", "o", "s"]], 3)
... except TypeError as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
... except ZeroDivisionError as e:
...     print(e)
division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, -3))
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

>>> matrix = [[]]
    >>> print(matrix_divided(matrix, 2))
    [[]]

>>> try:
...     matrix_divided([[1, 2 ,3], [4, 5]], 3)
... except TypeError as e:
...     print(e)
Each row of the matrix must have the same size

>>> try:
...     matrix_divided([[1, 2, 3], [4, 5, 6]], "hello")
... except TypeError as e:
...     print(e)
div must be a number

>>> try:
...     matrix_divided()
... except TypeError as e:
...     print(e)
matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'